(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{76:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return l})),t.d(n,"toc",(function(){return s})),t.d(n,"default",(function(){return i}));var r=t(3),a=t(7),c=(t(0),t(87)),o={id:"scn_markers",title:"scNavigator: markers file"},l={unversionedId:"scn_markers",id:"scn_markers",isDocsHomePage:!1,title:"scNavigator: markers file",description:"This section describes how cluster markers are stored in scNavigator.",source:"@site/docs/markers.md",slug:"/scn_markers",permalink:"/scn/docs/docs/scn_markers",editUrl:"https://github.com/ctlab/scNavigator/edit/master/scn_docs/docs/markers.md",version:"current",sidebar:"docs",previous:{title:"scNavigator: expression dataset",permalink:"/scn/docs/docs/scn_expression"},next:{title:"scNavigator: gene signature search",permalink:"/scn/docs/docs/scn_gene_signature_search"}},s=[{value:"<code>markers.json</code>",id:"markersjson",children:[]}],p={toc:s};function i(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("p",null,"This section describes how cluster markers are stored in scNavigator."),Object(c.b)("p",null,"First of all, markers in scNavigator are used for two purposes:"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},'To be shown in the "markers" section on the dataset page'),Object(c.b)("li",{parentName:"ol"},"We use marker for gene signature search in scNavigator.")),Object(c.b)("h2",{id:"markersjson"},Object(c.b)("inlineCode",{parentName:"h2"},"markers.json")),Object(c.b)("p",null,"This is a list of data.frames of Seurat ",Object(c.b)("inlineCode",{parentName:"p"},"FindAllMatrix")," converted to JSON. Sometimes we would like to show more than one markers table. For example, when we performed clustering with different resolutions and then identified markers for different clustering resolutions we would like to have both of the tables in the same place."),Object(c.b)("p",null,"Below is an example of valid ",Object(c.b)("inlineCode",{parentName:"p"},"markers.json")," file: "),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-json"},'{\n  "Cluster_0.6": [\n    {\n      "p_val": 0,\n      "avg_logFC": 1.4697,\n      "pct.1": 0.961,\n      "pct.2": 0.071,\n      "p_val_adj": 0,\n      "cluster": 0,\n      "gene": "CEL"\n    },\n    {\n      "p_val": 7.5714e-304,\n      "avg_logFC": 2.1996,\n      "pct.1": 0.968,\n      "pct.2": 0.082,\n      "p_val_adj": 2.4281e-299,\n      "cluster": 0,\n      "gene": "PRSS3P1"\n    },\n    {\n      "p_val": 1.6988e-303,\n      "avg_logFC": 3.3761,\n      "pct.1": 0.744,\n      "pct.2": 0.026,\n      "p_val_adj": 5.4479e-299,\n      "cluster": 0,\n      "gene": "AQP8"\n    },\n    {\n      "p_val": 1.4416e-291,\n      "avg_logFC": 2.8036,\n      "pct.1": 0.872,\n      "pct.2": 0.059,\n      "p_val_adj": 4.6231e-287,\n      "cluster": 0,\n      "gene": "AZGP1"\n    },\n    {\n      "p_val": 4.769e-291,\n      "avg_logFC": 2.8413,\n      "pct.1": 0.94,\n      "pct.2": 0.082,\n      "p_val_adj": 1.5294e-286,\n      "cluster": 0,\n      "gene": "ANPEP"\n    },\n    ...\n  ],\n  "Cluster_0.8": [\n    {\n      "p_val": 2.255e-278,\n      "avg_logFC": 2.6058,\n      "pct.1": 0.918,\n      "pct.2": 0.081,\n      "p_val_adj": 7.2317e-274,\n      "cluster": 0,\n      "gene": "RARRES2"\n    },\n    {\n      "p_val": 3.0854e-274,\n      "avg_logFC": 2.6125,\n      "pct.1": 1,\n      "pct.2": 0.117,\n      "p_val_adj": 9.8946e-270,\n      "cluster": 0,\n      "gene": "CPA2"\n    },\n    {\n      "p_val": 5.5019e-272,\n      "avg_logFC": 4.3333,\n      "pct.1": 0.918,\n      "pct.2": 0.103,\n      "p_val_adj": 1.7644e-267,\n      "cluster": 0,\n      "gene": "AMY2A"\n    },\n    {\n      "p_val": 3.521e-265,\n      "avg_logFC": 2.4203,\n      "pct.1": 0.566,\n      "pct.2": 0.008,\n      "p_val_adj": 1.1291e-260,\n      "cluster": 0,\n      "gene": "AMY1C"\n    },\n    {\n      "p_val": 6.0698e-264,\n      "avg_logFC": 2.4958,\n      "pct.1": 0.683,\n      "pct.2": 0.027,\n      "p_val_adj": 1.9465e-259,\n      "cluster": 0,\n      "gene": "AQP12A"\n    },\n    {\n      "p_val": 2.9289e-262,\n      "avg_logFC": 2.466,\n      "pct.1": 0.979,\n      "pct.2": 0.116,\n      "p_val_adj": 9.3926e-258,\n      "cluster": 0,\n      "gene": "PNLIPRP1"\n    },\n    {\n      "p_val": 2.0913e-259,\n      "avg_logFC": 3.6326,\n      "pct.1": 0.932,\n      "pct.2": 0.122,\n      "p_val_adj": 6.7064e-255,\n      "cluster": 0,\n      "gene": "CTRL"\n    },\n    {\n      "p_val": 1.8827e-258,\n      "avg_logFC": 3.0714,\n      "pct.1": 0.68,\n      "pct.2": 0.032,\n      "p_val_adj": 6.0375e-254,\n      "cluster": 0,\n      "gene": "AMYP1"\n    },\n    {\n      "p_val": 2.3942e-257,\n      "avg_logFC": 0.4263,\n      "pct.1": 0.947,\n      "pct.2": 0.09,\n      "p_val_adj": 7.6779e-253,\n      "cluster": 0,\n      "gene": "CUZD1"\n    },\n    {\n      "p_val": 5.9308e-255,\n      "avg_logFC": 2.3322,\n      "pct.1": 0.719,\n      "pct.2": 0.036,\n      "p_val_adj": 1.902e-250,\n      "cluster": 0,\n      "gene": "AQP12B"\n    },\n    {\n      "p_val": 3.0264e-253,\n      "avg_logFC": 3.5532,\n      "pct.1": 0.986,\n      "pct.2": 0.153,\n      "p_val_adj": 9.7053e-249,\n      "cluster": 0,\n      "gene": "REG1B"\n    },\n    ...\n  ]\n}\n')))}i.isMDXComponent=!0},87:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return v}));var r=t(0),a=t.n(r);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=a.a.createContext({}),i=function(e){var n=a.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=i(e.components);return a.a.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},g=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=i(t),g=r,v=u["".concat(o,".").concat(g)]||u[g]||d[g]||c;return t?a.a.createElement(v,l(l({ref:n},p),{},{components:t})):a.a.createElement(v,l({ref:n},p))}));function v(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var c=t.length,o=new Array(c);o[0]=g;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<c;p++)o[p]=t[p];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,t)}g.displayName="MDXCreateElement"}}]);